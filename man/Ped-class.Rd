% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClass.R, R/AllConstructor.R,
%   R/AllAccessors.R, R/AllGeneric.R
\docType{class}
\name{Ped-class}
\alias{Ped-class}
\alias{Ped}
\alias{Ped,data.frame-method}
\alias{Ped,character_OR_integer-method}
\alias{Ped,missing-method}
\alias{id}
\alias{id,Ped-method}
\alias{id<-}
\alias{id<-,Ped,character_OR_integer-method}
\alias{dadid}
\alias{dadid,Ped-method}
\alias{dadid<-}
\alias{dadid<-,Ped,character_OR_integer-method}
\alias{momid}
\alias{momid,Ped-method}
\alias{momid<-}
\alias{momid<-,Ped,character_OR_integer-method}
\alias{famid}
\alias{famid,Ped-method}
\alias{famid<-}
\alias{famid<-,Ped,character_OR_integer-method}
\alias{sex}
\alias{sex,Ped-method}
\alias{sex<-}
\alias{sex<-,Ped,character_OR_integer-method}
\alias{affected}
\alias{affected,Ped-method}
\alias{affected<-}
\alias{affected<-,Ped,numeric_OR_logical-method}
\alias{avail}
\alias{avail,Ped-method}
\alias{avail<-}
\alias{avail<-,Ped,numeric_OR_logical-method}
\alias{status}
\alias{status,Ped-method}
\alias{status<-}
\alias{status<-,Ped,numeric_OR_logical-method}
\alias{isinf}
\alias{isinf,Ped-method}
\alias{isinf<-}
\alias{isinf<-,Ped,numeric_OR_logical-method}
\alias{kin}
\alias{kin,Ped-method}
\alias{kin<-}
\alias{kin<-,Ped,numeric-method}
\alias{useful}
\alias{useful,Ped-method}
\alias{useful<-}
\alias{useful<-,Ped,numeric_OR_logical-method}
\alias{mcols<-,Ped,list-method}
\alias{mcols<-,Ped,data.frame-method}
\alias{summary,Ped-method}
\alias{show,Ped-method}
\alias{as.list,Ped-method}
\alias{as.data.frame,Ped-method}
\alias{subset,Ped-method}
\title{Ped object}
\usage{
\S4method{Ped}{data.frame}(obj, cols_used_init = FALSE, cols_used_del = FALSE)

\S4method{Ped}{character_OR_integer}(
  obj,
  sex,
  dadid,
  momid,
  famid = NA,
  steril = NA,
  status = NA,
  avail = NA,
  affected = NA,
  missid = NA_character_
)
}
\arguments{
\item{obj}{A character vector with the id of the individuals or a
\code{data.frame} with all the informations in corresponding columns.}

\item{cols_used_init}{Boolean defining if the columns that will be used
should be initialised to NA.}

\item{cols_used_del}{Boolean defining if the columns that will be used
should be deleted.}

\item{sex}{A character, factor or numeric vector corresponding to
the gender of the individuals. This will be transformed to an ordered factor
with the following levels: \code{male} < \code{female} < \code{unknown} < `terminated
The following values are recognized:
\itemize{
\item character() or factor() : "f", "m", "woman", "man", "male", "female",
"unknown", "terminated"
\item numeric() : 1 = "male", 2 = "female", 3 = "unknown", 4 = "terminated"
}}

\item{dadid}{A vector containing for each subject, the identifiers of the
biologicals fathers.}

\item{momid}{A vector containing for each subject, the identifiers of the
biologicals mothers.}

\item{famid}{A character vector with the family identifiers of the
individuals. If provide, will be aggregated to the individuals
identifiers separated by an underscore.}

\item{steril}{A logical vector with the sterilisation status of the
individuals
(i.e. \code{FALSE} = not sterilised, \code{TRUE} = sterilised, \code{NA} = unknown).}

\item{status}{A logical vector with the affection status of the
individuals
(i.e. \code{FALSE} = alive, \code{TRUE} = dead, \code{NA} = unknown).}

\item{avail}{A logical vector with the availability status of the
individuals
(i.e. \code{FALSE} = not available, \code{TRUE} = available, \code{NA} = unknown).}

\item{affected}{A logical vector with the affection status of the
individuals
(i.e. \code{FALSE} = unaffected, \code{TRUE} = affected, \code{NA} = unknown).}

\item{missid}{A character vector with the missing values identifiers.
All the id, dadid and momid corresponding to those values will be set
to \code{NA_character_}.}
}
\value{
A Ped object.
}
\description{
S4 class to represent the identity informations of the individuals
in a pedigree.

\subsection{Constructor :}{

You either need to provide a vector of the same size for each slot
or a \code{data.frame} with the corresponding columns.

The metadata will correspond to the columns that do not correspond
to the Ped slots.
}
}
\details{
The minimal needed informations are \code{id}, \code{dadid}, \code{momid} and \code{sex}.
The other slots are used to store recognized informations.
Additional columns can be added to the Ped object and will be
stored in the \code{elementMetadata} slot of the Ped object.
}
\section{Slots}{

\describe{
\item{\code{id}}{A character vector with the id of the individuals.}

\item{\code{dadid}}{A character vector with the id of the father of the individuals.}

\item{\code{momid}}{A character vector with the id of the mother of the individuals.}

\item{\code{sex}}{An ordered factor vector for the sex of the individuals
(i.e. \code{male} < \code{female} < \code{unknown} < \code{terminated}).}

\item{\code{famid}}{A character vector with the family identifiers of the
individuals (optional).}

\item{\code{steril}}{A logical vector with the sterilisation status of the
individuals
(i.e. \code{FALSE} = not sterilised, \code{TRUE} = sterilised, \code{NA} = unknown).}

\item{\code{status}}{A logical vector with the affection status of the
individuals
(i.e. \code{FALSE} = alive, \code{TRUE} = dead, \code{NA} = unknown).}

\item{\code{avail}}{A logical vector with the availability status of the
individuals
(i.e. \code{FALSE} = not available, \code{TRUE} = available, \code{NA} = unknown).}

\item{\code{affected}}{A logical vector with the affection status of the
individuals
(i.e. \code{FALSE} = not affected, \code{TRUE} = affected, \code{NA} = unknown).}

\item{\code{useful}}{A logical vector with the usefulness status of the
individuals
(i.e. \code{FALSE} = not useful, \code{TRUE} = useful).}

\item{\code{isinf}}{A logical vector indicating if the individual is informative
or not
(i.e. \code{FALSE} = not informative, \code{TRUE} = informative).}

\item{\code{kin}}{A numeric vector with minimal kinship value between the
individuals and the useful individuals.}

\item{\code{num_child_tot}}{A numeric vector with the total number of children
of the individuals.}

\item{\code{num_child_dir}}{A numeric vector with the number of children
of the individuals.}

\item{\code{num_child_ind}}{A numeric vector with the number of children
of the individuals.}

\item{\code{elementMetadata}}{A DataFrame with the additional metadata columns
of the Ped object.}

\item{\code{metadata}}{Meta informations about the pedigree.}
}}

\section{Accessors}{

For all the following accessors, the \code{x} parameters is a Ped object.
Each getters return a vector of the same length as \code{x} with the values
of the corresponding slot. For each getter, you have a setter with the
same name, to be use as \code{slot(x) <- value}.
The \code{value} parameter is a vector of the same length as \code{x}, except
for the \code{mcols()} accessors where \code{value} is a list or a data.frame with
each elements with the same length as \code{x}.


\itemize{
\item \code{id(x)} : Individuals identifiers
}


\itemize{
\item \code{dadid(x)} : Individuals' father identifiers
}


\itemize{
\item \code{momid(x)} : Individuals' mother identifiers
}


\itemize{
\item \code{famid(x)} : Individuals' family identifiers
}


\itemize{
\item \code{sex(x)} : Individuals' gender
}


\itemize{
\item \code{affected(x)} : Individuals' affection status
}


\itemize{
\item \code{avail(x)} : Individuals' availability status
}


\itemize{
\item \code{status(x)} : Individuals' death status
}


\itemize{
\item \code{isinf(x)} : Individuals' informativeness status
}


\itemize{
\item \code{kin(x)} : Individuals' kinship distance to the
informative individuals
}


\itemize{
\item \code{useful(x)} : Individuals' usefullness status
}


\itemize{
\item \code{mcols(x)} : Individuals' metadata
}
}

\section{Generics}{

\itemize{
\item \code{summary(x)}: Compute the summary of a Ped object
}


\itemize{
\item \code{show(x)}: Convert the Ped object to a data.frame
and print it with its summary.
}


\itemize{
\item \code{as.list(x)}: Convert a Ped object to a list with
the metadata columns at the end.
}


\itemize{
\item \code{as.data.frame(x)}: Convert a Ped object to a data.frame with
the metadata columns at the end.
}


\itemize{
\item \code{subset(x, i, del_parents = FALSE, keep = TRUE)}: Subset a Ped object
based on the individuals identifiers given.
\itemize{
\item \code{i} : A vector of individuals identifiers to keep.
\item \code{del_parents} : A logical value indicating if the parents
of the individuals should be deleted.
\item \code{keep} : A logical value indicating if the individuals
should be kept or deleted.
}
}
}

\examples{

data(sampleped)
Ped(sampleped)

Ped(
    obj = c("1", "2", "3", "4", "5", "6"),
    dadid = c("4", "4", "6", "0", "0", "0"),
    momid = c("5", "5", "5", "0", "0", "0"),
    sex = c(1, 2, 3, 1, 2, 1),
    missid = "0"
)
}
\seealso{
\code{\link[=Pedigree]{Pedigree()}}
}
